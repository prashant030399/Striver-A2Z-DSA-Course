Given an increasing sorted rotated array arr of distinct integers. The array is right-rotated k times. Find the value of k.
Let's suppose we have an array arr = [2, 4, 6, 9], so if we rotate it by 2 times so that it will look like this:
After 1st Rotation : [9, 2, 4, 6]
After 2nd Rotation : [6, 9, 2, 4]



class Solution {
    public int findKRotation(List<Integer> arr) {
  
  int low =0;
  int high = arr.size()-1 ;
  int ans = Integer.MAX_VALUE ;
  int index = -1 ;
  
  while(low <= high){
      
      int mid = (low + high)/2;
      
      if(arr.get(low) <= arr.get(high)){
          if(ans > arr.get(low)){
              ans = arr.get(low);
              index = low ;
             
          }
          break ;
      }
      
      
      if(arr.get(low) <= arr.get(mid)){
          if(ans > arr.get(low)){
              ans = arr.get(low);
              index = low;
          }
          low = mid +1 ;
      }
      
      else{
          if(ans > arr.get(mid)){
              ans = arr.get(mid);
              index = mid ;
          }
          high = mid -1;
      }
    
  }
  
  return index ;
  
  
    }
}
