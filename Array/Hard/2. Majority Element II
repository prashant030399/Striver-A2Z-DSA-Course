229. Majority Element II

Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.


Brute

class Solution {
    public List<Integer> majorityElement(int[] nums) {
   
List<Integer> ans  = new ArrayList<>();

 for(int i=0 ; i<=nums.length-1 ; i++){
    if(ans.size() == 0 || ans.get(0) != nums[i]){
    int count =0;
      for(int j=0 ; j<= nums.length-1 ; j++){
        if(nums[i] == nums[j]) count ++;
      }

      if(count > nums.length/3 && !ans.contains(nums[i])) ans.add(nums[i]); 
   }  } 

return ans;


    }
}



Better


class Solution {
    public List<Integer> majorityElement(int[] nums) {

        Map<Integer,Integer> mpp = new HashMap <>();

List<Integer> ans  = new ArrayList<>();

 for(int i=0 ; i<=nums.length-1 ; i++){
         mpp.put(nums[i], mpp.getOrDefault(nums[i],0) + 1);
        } 
    
for(Map.Entry<Integer,Integer> e : mpp.entrySet()){
    if(e.getValue() > nums.length/3) ans.add(e.getKey());
}

return ans;


    }
}





